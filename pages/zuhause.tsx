import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/client";
import { Heading, Text } from "@chakra-ui/layout";
import { Button } from "@chakra-ui/button";
import { LargeContainer } from "../components/container";
import { Hero } from "../components/hero";
import { prismaClient } from "../prismaClient";
import { Alarm } from "@prisma/client";
import { AlarmTable } from "../components/alarm-table";
import { EditForm } from "../components/form";
import { useState } from "react";

export async function getServerSideProps() {
  const alarms: Alarm[] = await prismaClient.alarm.findMany();
  return {
    props: {
      initialAlarms: alarms,
    },
  };
}

export default function Zuhause({ initialAlarms }) {
  const [session] = useSession();
  const [alarms, setAlarms] = useState<Alarm[]>(initialAlarms);

  return (
    <>
      <Head>
        <title>Alarmanlage</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Hero src={"/about1600x500.jpg"}>
        {session ? (
          <LargeContainer>
            <Heading as="h1" variant="large">
              Willkommen in Deinem sicheren Zuhause!
            </Heading>
            <Text>
              Überprüfe Dein Alarmsystem, nimm Änderungen vor und sieh Dir Deine
              Alarmhistorie an.
            </Text>
          </LargeContainer>
        ) : (
          <LargeContainer>
            <Text>Bitte Logge dich ein, um Deine private Seite zu sehen!</Text>
          </LargeContainer>
        )}
        {session ? (
          <>
            <LargeContainer>
              {console.log(session.user)}
              <Text>
                Du bist eingeloggt als{" "}
                {session.user.name ? session.user.name : session.user.email}
              </Text>
              <Button
                marginTop="2rem"
                colorScheme="yellow"
                onClick={() => signOut()}
              >
                Sign out
              </Button>{" "}
            </LargeContainer>
          </>
        ) : (
          <>
            <LargeContainer>
              <Button
                marginTop="2rem"
                colorScheme="yellow"
                onClick={() => signIn()}
              >
                Sign in
              </Button>
            </LargeContainer>
          </>
        )}
      </Hero>
      <LargeContainer>
        {session ? (
          <>
            <AlarmTable alarms={alarms} />
            <EditForm initialUser={session.user} />
          </>
        ) : (
          <></>
        )}
      </LargeContainer>
    </>
  );
}
